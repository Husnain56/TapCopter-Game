<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerMovementUpdater.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Helicopter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
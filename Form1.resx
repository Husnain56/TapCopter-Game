<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerMovementUpdater.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Helicopter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerMovementUpdater.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Helicopter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>